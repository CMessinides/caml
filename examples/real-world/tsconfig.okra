# Adapted from example tsconfig.json file: https://basarat.gitbook.io/typescript/project/compilation-context/tsconfig#compileroptions
compilerOptions/

	# Basic Options

	# Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', or 'ESNEXT'.
	target: es5
	# Specify module code generation: 'commonjs', 'amd', 'system', 'umd' or 'es2015'.
	module: commonjs
	# Specify library files to be included in the compilation:
	lib/
	# Allow JavaScript files to be compiled.
	allowJs? yes
	# Report errors in .js files.
	checkJs? yes
	# Specify JSX code generation: 'preserve', 'react-native', or 'react'.
	jsx: preserve
	# Generates corresponding '.d.ts' file.
	declaration? yes
	# Generates corresponding '.map' file.
	sourceMap? yes
	# Concatenate and emit output to single file.
	outFile: ./
	# Redirect output structure to the directory.
	outDir: ./
	# Specify the root directory of input files. Use to control the output directory structure with --outDir.
	rootDir: ./
	# Do not emit comments to output.
	removeComments? yes
	# Do not emit outputs.
	noEmit? yes
	# Import emit helpers from 'tslib'.
	importHelpers? yes
	# Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'.
	downlevelIteration? yes
	# Transpile each file as a separate module (similar to 'ts.transpileModule').
	isolatedModules? yes
	
	# Strict Type-Checking Options

	# Enable all strict type-checking options.
	strict? yes
	# Raise error on expressions and declarations with an implied 'any' type.
	noImplicitAny? yes
	# Enable strict null checks.
	strictNullChecks? yes
	# Raise error on 'this' expressions with an implied 'any' type.
	noImplicitThis? yes
	# Parse in strict mode and emit use strict for each source file.
	alwaysStrict? yes

	# Additional Checks

	# Report errors on unused locals.
	noUnusedLocals? yes
	# Report errors on unused parameters.
	noUnusedParameters? yes
	# Report error when not all code paths in function return a value.
	noImplicitReturns? yes
	# Report errors for fallthrough cases in switch statement.
	noFallthroughCasesInSwitch? yes

	# Module Resolution Options

	# Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6).
	moduleResolution: node
	# Base directory to resolve non-absolute module names.
	baseUrl: ./
	# A series of entries which re-map imports to lookup locations relative to the 'baseUrl'.
	paths/
	# List of root folders whose combined content represents the structure of the project at runtime.
	rootDirs/
	# List of folders to include type definitions from.
	typeRoots/
	# Type declaration files to be included in compilation.
	types/
	# Allow default imports from modules with no default export. This does not affect code emit, just typechecking.
	allowSyntheticDefaultImports? yes

	# Source Map Options

	# Specify the location where debugger should locate TypeScript files instead of source locations.
	sourceRoot: ./
	# Specify the location where debugger should locate map files instead of generated locations.
	mapRoot: ./
	# Emit a single file with source maps instead of having a separate file.
	inlineSourceMap? yes
	# Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set.
	inlineSources? yes

	# Experimental Options

	# Enables experimental support for ES7 decorators.
	experimentalDecorators? yes
	# Enables experimental support for emitting type metadata for decorators.
	emitDecoratorMetadata? yes
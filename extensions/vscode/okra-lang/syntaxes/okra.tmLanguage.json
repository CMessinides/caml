{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Okra",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#entry"
		}
	],
	"repository": {
		"comment": {
			"begin": "^\\t*(?=#\\p{Print}*$)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.comment.leading.okra"
				}
			},
			"end": "(?=$)",
			"patterns": [
				{
					"begin": "#",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.okra"
						}
					},
					"end": "\\n",
					"name": "comment.line.number-sign.okra"
				}
			]
		},
		"entry": {
			"begin": "(?:(^\\t*)|\\t+)([^:=\\/?]+)?",
			"beginCaptures": {
				"2": {
					"name": "support.type.property-name.okra"
				}
			},
			"end": "(?=$)",
			"patterns": [
				{
					"include": "#string"
				},
				{
					"include": "#boolean"
				},
				{
					"include": "#number"
				},
				{
					"include": "#list"
				}
			]
		},
		"number": {
			"begin": "(?:(=)\\s*(?=\\n)|(=))",
			"beginCaptures": {
				"1": {
					"name": "invalid.illegal.unexpected-newline.okra"
				},
				"2": {
					"name": "punctuation.separator.key-value.entry.okra"
				}
			},
			"end": "\\n",
			"patterns": [
				{
					"match": "\\s*([+\\-]?\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)\\s*(?=\\n)",
					"captures": {
						"1": {
							"name": "constant.numeric.okra"
						}
					}
				},
				{
					"match": "[^\\s]+",
					"name": "invalid.illegal.invalid-numeric-value.okra"
				}
			]
		},
		"boolean": {
			"begin": "(?:(\\?)\\s*(?=\\n)|(\\?))",
			"beginCaptures": {
				"1": {
					"name": "invalid.illegal.unexpected-newline.okra"
				},
				"2": {
					"name": "punctuation.separator.key-value.entry.okra"
				}
			},
			"end": "\\n",
			"patterns": [
				{
					"match": "(?i)\\s*(yes|no|y|n|true|false)\\s*(?=\\n)",
					"captures": {
						"1": {
							"name": "constant.language.okra"
						}
					}
				},
				{
					"match": "[^\\s]+",
					"name": "invalid.illegal.invalid-boolean-value.okra"
				}
			]
		},
		"string": {
			"begin": ":",
			"beginCaptures": {
				"0": {
					"name": "punctuation.separator.key-value.entry.okra"
				}
			},
			"end": "\\n",
			"patterns": [
				{
					"match": ".+",
					"name": "string.unquoted.okra"
				}
			]
		},
		"list": {
			"begin": "/",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.okra"
				}
			},
			"end": "\\n",
			"patterns": [
				{
					"match": "[^\\s]+",
					"name": "invalid.illegal.expected-newline-after-slash.okra"
				}
			]
		}
	},
	"scopeName": "source.okra"
}
